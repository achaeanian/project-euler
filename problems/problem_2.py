# Even though it is slightly memory inefficient to generate a full fibonnaci sequence
# when only using the even terms, it if a function that will be reusable and still quite light
def fibonnaci_sequence_to_n(n):
    fibonnaci_seq = [1, 2]

    while fibonnaci_seq[-1] < n:
        next_val = fibonnaci_seq[-1] + fibonnaci_seq[-2]
        fibonnaci_seq.append(next_val)

    return fibonnaci_seq


if __name__ == "__main__":
    """ Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms."""
    print sum(
        i for i in fibonnaci_sequence_to_n(4000000)
        if i % 2 == 0
    )
